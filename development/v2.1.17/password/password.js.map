{"version":3,"sources":["../../../../src/password/password.es6"],"names":["password_win","password_win_view","init","$menuLink","click","init_password_win","moveToTop","root","$","i18n","createBlankWindow","title","resizable","collapsable","minimizable","maximizable","height","close","dialog","remove","open","destroy","unbind","init_state","state","empty_fields","validate","clear","debounce","show","account","password","new_password","verify_password","btn","disabled","password_error_message","length","test","change","request","change_password","old_password","send","then","data","message","growl","notice","require","login","defer","catch","err","error","bind"],"mappings":"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","file":"password.js","sourcesContent":["/*\n * Created by amin on May 19, 2016.\n */\n\nimport liveapi from '../websockets/binary_websockets';\nimport windows from '../windows/windows';\nimport rv from '../common/rivetsExtra';\nimport _ from 'lodash';\nimport html from 'text!./password.html';\nimport 'css!./password.css';\n\nlet password_win = null;\nlet password_win_view = null;\n\nexport const init = ($menuLink) => {\n   $menuLink.click(() => {\n      if (!password_win)\n         init_password_win();\n      else\n         password_win.moveToTop();\n   });\n}\n\nconst init_password_win = () => {\n   const root = $(html).i18n();\n   password_win = windows.createBlankWindow(root, {\n      title: 'Change password'.i18n(),\n      resizable:false,\n      collapsable:false,\n      minimizable: false,\n      maximizable: false,\n      // width: 408,\n      height: 350,\n      'data-authorized': true,\n      close: () => {\n         password_win.dialog('destroy');\n         password_win.remove();\n         password_win = null;\n      },\n      open: () => { },\n      destroy: () => {\n         password_win_view && password_win_view.unbind();\n         password_win_view = null;\n      }\n   });\n\n   init_state(root);\n   password_win.dialog('open');\n}\n\nconst init_state = (root) => {\n   const state = {\n      empty_fields: {\n         validate: false,\n         clear: _.debounce(() => {\n            state.empty_fields.validate = false;\n         }, 2000),\n         show: () => {\n            state.empty_fields.validate = true;\n            state.empty_fields.clear();\n         }\n      },\n      account: {\n         password: '',\n         new_password: '',\n         verify_password: ''\n      },\n      btn: {\n         disabled: false,\n      },\n\n   };\n\n   state.password_error_message = () => {\n      const password = state.account.new_password;\n      if(password === '') return state.empty_fields.validate ? '* Please enter your new password'.i18n() : '';\n      if(password.length < 6) return '* Password must be 6 characters minimum'.i18n();\n      if(!/\\d/.test(password) || !/[a-z]/.test(password) || !/[A-Z]/.test(password)) {\n         return '* Password must contain uppercase letters and numbers'.i18n();\n      }\n      return '';\n   };\n\n   state.btn.change = () => {\n      state.empty_fields.show();\n      const account = state.account;\n      if(state.account.password === ''\n         || state.password_error_message() !== ''\n         || state.account.new_password !== state.account.verify_password) {\n         return;\n      }\n      const request = {\n         change_password: 1,\n         old_password: state.account.password,\n         new_password: state.account.new_password\n      };\n      state.btn.disabled = true;\n      liveapi.send(request)\n         .then((data) =>{\n            if(data.change_password !== 1){\n               throw { message: 'Failed to update the password'.i18n()};\n            }\n            state.btn.disabled = false;\n            $.growl.notice({ message: 'Password successfully updated.'.i18n()});\n            $.growl.notice({ message: 'Redirecting to oauth login page,<br/>Please use your new password to login.'.i18n()});\n            require(['oauth/login'], (login) => {\n               _.defer(() => login.login(), 1000);\n            });\n            password_win.dialog('close');\n         })\n         .catch((err) => {\n            state.btn.disabled = false;\n            $.growl.error({ message: err.message});\n         })\n   }\n\n   password_win_view = rv.bind(root[0], state);\n}\n\nexport default { init }\n"]}