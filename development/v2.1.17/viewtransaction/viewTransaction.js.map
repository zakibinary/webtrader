{"version":3,"sources":["../../../../src/viewtransaction/viewTransaction.es6"],"names":["open_dialogs","require","market_data_disruption_win","show_market_data_disruption_win","proposal","moveToTop","msg","i18n","root","createBlankWindow","title","height","resizable","collapsable","minimizable","maximizable","destroy","dialog","remove","window","dd","init_chart","state","options","data","type","decimal_digits","history","times","prices","i","length","push","Math","max","substring","indexOf","candles","map","c","epoch","open","high","low","close","el","find","chart_options","credits","href","text","chart","renderTo","backgroundColor","width","marginLeft","marginRight","tooltip","xDateFormat","valueDecimals","undefined","xAxis","categories","startOnTick","endOnTick","min","first","last","labels","overflow","format","yAxis","align","x","y","series","name","exporting","enabled","enableImages","legend","navigator","plotOptions","line","marker","radius","candlestick","lineColor","color","upColor","upLineColor","shadow","rangeSelector","Highcharts","Chart","addPlotLineX","addPlotLine","value","id","label","text_left","zIndex","addPlotLineY","get_tick_value","symbol","send","ticks_history","granularity","style","start","end","count","catch","err","console","error","init","contract_id","transaction_id","Promise","resolve","reject","proposal_open_contract","then","underlying","shortcode","init_dialog","growl","message","update_indicative","forget","echo_req","subscribe","contract","bid_price","is_sold","exit_tick","exit_level","table","user_sold","sell_spot","sell_time","date_expiry","validation_error","validation","is_expired","is_valid_to_sell","is_forward_starting","date_start","current_spot_time","fwd_starting","current_spot","sell","bid_prices","shift","unit","split","cent","manual_reflow","contract_type","profit","current_value_in_dollar","profit_point","current_value_in_point","entry_tick","entry_level","current_level","status","exit_tick_time","entry_tick_time","sell_price","final_price","barrier","high_barrier","low_barrier","html","init_state","on_proposal_open_contract","transWin","display_name","minWidth","minHeight","view","unbind","events","off","onclose","on","resize","bind","sell_at_market","sell_at_market_enabled","price","buy_price","state_confirm","longcode","sold_for","return_percent","toFixed","balance","balance_after","currency","$html","after","view_confirm","route","update","is_settleable","is_ended","entry_spot","barrier_count","formatPrice","tick_count","prediction","sell_spot_time","purchase_time","is_sold_at_market","loading","toUpperCase","details","replace","per_point","stop_loss","stop_profit","is_point","is_up","direction","amount_per_point","parseFloat","pro_los","stop_loss_level","stop_profit_level","request","toLowerCase","h","container","transactionChart","setSize","hasUserSize","showLoading","hideLoading","get_chart_data","update_live_chart","key","keyFor","req","register","on_tick","on_candles","perv_tick","tick","addPoint","quote","clean_up","data_key","ohlc","open_time","clean_up_done","unregister","duration","utc","unix","margin"],"mappings":"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","file":"viewTransaction.js","sourcesContent":["﻿/**\n * Created by amin on January 14, 2016.\n */\n\nimport $ from 'jquery';\nimport windows from 'windows/windows';\nimport liveapi from 'websockets/binary_websockets';\nimport chartingRequestMap from 'charts/chartingRequestMap';\nimport rv from 'common/rivetsExtra';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport 'jquery-growl';\nimport 'common/util';\n\nconst open_dialogs = {};\n\nrequire(['css!viewtransaction/viewTransaction.css']);\nrequire(['text!viewtransaction/viewTransaction.html']);\n\nlet market_data_disruption_win = null;\nconst show_market_data_disruption_win = (proposal) => {\n   if(market_data_disruption_win){\n      market_data_disruption_win.moveToTop();\n      return;\n   }\n   const msg = 'There was a market data disruption during the contract period. For real-money accounts we will attempt to correct this and settle the contract properly, otherwise the contract will be cancelled and refunded. Virtual-money contracts will be cancelled and refunded.'.i18n();\n   // const msg = proposal.validation_error;\n   const root = $('<div class=\"data-disruption-dialog\">' + msg + '</div>');\n\n   market_data_disruption_win = windows.createBlankWindow(root, {\n      title: ' There was an error '.i18n(),\n      height: 200,\n      resizable:false,\n      collapsable:false,\n      minimizable: false,\n      maximizable: false,\n      destroy: () => {\n         market_data_disruption_win && market_data_disruption_win.dialog('destroy').remove();\n         market_data_disruption_win = null;\n      },\n      'data-authorized': 'true'\n   });\n\n   market_data_disruption_win.dialog('open');\n   window.dd = market_data_disruption_win;\n}\n\nconst init_chart = (root, state, options) => {\n   let data = [];\n   let type = '';\n   let decimal_digits = 0;\n   if(options.history){\n      type = 'line';\n      const history = options.history;\n      const times = history.times;\n      const prices = history.prices;\n      for(let i = 0; i < times.length; ++i) {\n         data.push([times[i]*1000, prices[i]*1]);\n         decimal_digits = Math.max(decimal_digits, prices[i].substring(prices[i].indexOf('.') + 1).length);\n      }\n   }\n   if(options.candles) {\n      type = 'candlestick';\n      data = options.candles.map(\n         (c) => [c.epoch*1000, c.open*1, c.high*1, c.low*1, c.close*1]\n      )\n   }\n   const title = options.title;\n   const el = root.find('.transaction-chart')[0];\n\n   const chart_options = {\n      credits: { href: '#', text: '' },\n      chart: {\n         type: 'line',\n         renderTo: el,\n         backgroundColor: null, /* make background transparent */\n         width: 0,\n         height: 0,\n         marginLeft:20,\n         marginRight:20\n      },\n      title:{\n         text: '' // Removing the title because it is redundant.\n      },\n      tooltip:{\n         xDateFormat:'%A, %b %e, %H:%M:%S GMT',\n         valueDecimals: decimal_digits || undefined,\n      },\n      xAxis: {\n         type: 'datetime',\n         categories:null,\n         startOnTick: false,\n         endOnTick: false,\n         min: data.length ? _.first(data)[0] : null,\n         max: data.length ? _.last(data)[0] : null,\n         labels: { overflow:\"justify\", format:\"{value:%H:%M:%S}\" },\n      },\n      yAxis: {\n         labels: { align: 'left', x: 0, y: -2 },\n         title: '',\n         // gridLineWidth: 0,\n      },\n      series: [{\n         name: title,\n         data: data,\n         type: type\n      }],\n      exporting: {enabled: false, enableImages: false},\n      legend: {enabled: false},\n      navigator: { enabled: true },\n      plotOptions: {\n         line: {\n            marker: { radius: 2 }\n         },\n         candlestick: {\n            lineColor: 'black',\n            color: 'red',\n            upColor: 'green',\n            upLineColor: 'black',\n            shadow: true\n         },\n      },\n      rangeSelector: { enabled: false },\n   };\n   const chart = new Highcharts.Chart(chart_options);\n\n   chart.addPlotLineX = (options) => {\n      chart.xAxis[0].addPlotLine({\n         value: options.value,\n         id: options.id || options.value,\n         label: {text: options.label || 'label', x: options.text_left ? -15 : 5},\n         color: options.color || '#e98024',\n         zIndex: 4,\n         width: options.width || 2,\n      });\n   };\n\n   chart.addPlotLineY = (options) => {\n      chart.yAxis[0].addPlotLine({\n         id: options.id || options.label,\n         value: options.value,\n         label: {text: options.label, align: 'center'},\n         color: options.color || 'green',\n         zIndex: 4,\n         width: 2,\n      });\n   };\n   return el.chart = chart;\n};\n\n/* get the tick value for a given epoch */\nconst get_tick_value = (symbol, epoch) => {\n   return liveapi.send({ticks_history: symbol, granularity: 0, style:'ticks', start: epoch, end:epoch+2, count: 1})\n      .catch((err) => console.error(err));\n}\n\nexport const init = (contract_id, transaction_id) => {\n   return new Promise((resolve, reject) => {\n      if(open_dialogs[transaction_id]) {\n         open_dialogs[transaction_id].moveToTop();\n         resolve();\n         return;\n      }\n      liveapi.send({proposal_open_contract: 1, contract_id: contract_id})\n            .then((data) => {\n            const proposal = data.proposal_open_contract;\n            /* check for market data disruption error */\n            if(proposal.underlying === undefined && proposal.shortcode === undefined) {\n               show_market_data_disruption_win(proposal);\n               return;\n            }\n            proposal.transaction_id = transaction_id;\n            proposal.symbol = proposal.underlying;\n            init_dialog(proposal);\n            resolve();\n         })\n         .catch((err) => {\n            console.error(err);\n            $.growl.error({ message: err.message });\n            reject();\n         });\n   });\n}\n\nconst update_indicative = (data, state) => {\n   if(data.error) {\n      $.growl.error({message: data.error.message});\n      liveapi.proposal_open_contract.forget(data.echo_req.contract_id);\n      liveapi.proposal_open_contract.subscribe(data.echo_req.contract_id);\n      return;\n   }\n   const contract = data.proposal_open_contract;\n   const id = contract.contract_id || data.echo_req.contract_id,\n      bid_price = contract.bid_price;\n   if(contract.is_sold && !contract.exit_tick && !contract.exit_level && !state.table.user_sold && !contract.sell_spot) {\n      \n      liveapi.send({contract_id: id, proposal_open_contract: 1});\n      return;\n   }\n   \n   state.table.user_sold = contract.sell_time && contract.sell_time < contract.date_expiry\n\n   if(id != state.contract_id) { return; }\n   if(contract.validation_error)\n      state.validation = contract.validation_error;\n   else if(contract.is_expired)\n      state.validation = 'This contract has expired'.i18n();\n   else if(contract.is_valid_to_sell)\n      state.validation = 'Note: Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.'.i18n();\n   if(contract.is_forward_starting && contract.date_start*1 > contract.current_spot_time*1)\n      state.fwd_starting = '* Contract is not yet started.'.i18n();\n   else\n      state.fwd_starting = '';\n   /*Do not update the current_spot and current_spot_time if the contract has expired*/\n   if(state.table.date_expiry*1 >= contract.current_spot_time*1) {\n      state.table.current_spot = contract.current_spot;\n      state.table.current_spot_time = contract.current_spot_time;\n      state.table.bid_price = contract.bid_price;\n      if(state.sell.bid_prices.length > 40) {\n         state.sell.bid_prices.shift();\n      }\n      state.sell.bid_prices.push(contract.bid_price)\n\n      if(contract.bid_price !== undefined) {\n         state.sell.bid_price.value = contract.bid_price;\n         state.sell.bid_price.unit = contract.bid_price.split(/[\\.,]+/)[0];\n         state.sell.bid_price.cent = contract.bid_price.split(/[\\.,]+/)[1];\n      }\n      state.sell.is_valid_to_sell = false;\n      state.sell.is_valid_to_sell = contract.is_valid_to_sell;\n      state.chart.manual_reflow();\n   } else {\n      /*Just change the current_spot_time to date_expiry*/\n      state.table.current_spot_time = state.table.date_expiry;\n   }\n   /*Required for spreads only*/\n   if(state.table.contract_type === \"SPREAD\"){\n      state.table.profit = contract.current_value_in_dollar;\n      state.table.profit_point = contract.current_value_in_point;\n      state.table.entry_tick = contract.entry_level + '';\n      if(state.table.entry_tick)\n         state.table.current_spot = contract.current_level;\n      if(contract.is_sold){\n         state.table.status = \"Closed\";\n         state.table.is_sold = contract.is_sold;\n         state.table.exit_tick = contract.exit_level;\n         state.table.exit_tick_time = contract.sell_time;\n      }\n      return;\n   }\n\n   // Some times backend doesn't send the entry-spot in the beginning. Setting it here to avoid any errors.\n   state.table.entry_tick = contract.entry_tick ? contract.entry_tick : state.table.entry_tick;\n   state.table.entry_tick_time = contract.entry_tick_time ? contract.entry_tick_time : state.table.entry_tick_time;   \n\n   if(contract.is_sold){\n      state.table.is_sold = contract.is_sold;\n      state.table.exit_tick = contract.exit_tick;\n      state.table.exit_tick_time = contract.exit_tick_time;\n      state.table.date_expiry = contract.date_expiry;\n      state.table.current_spot_time = contract.exit_tick_time;\n      state.table.sell_price = contract.sell_price;\n      state.table.final_price = contract.sell_price;\n      !state.table.user_sold && state.table.exit_tick_time && state.chart.chart.addPlotLineX({ value: state.table.exit_tick_time*1000, label: 'Exit Spot'.i18n(), text_left: true});\n      !state.table.user_sold && state.table.date_expiry && state.chart.chart.addPlotLineX({ value: state.table.date_expiry*1000, label: 'End Time'.i18n()});\n      state.table.user_sold && state.table.sell_price && state.chart.chart.addPlotLineX({ value: contract.sell_time*1000, label: 'Sell Time'.i18n()});\n   }\n\n   if(!state.chart.barrier && contract.barrier) {\n      state.chart.barrier = contract.barrier;\n      state.chart.barrier && state.chart.chart.addPlotLineY({value: state.chart.barrier*1, label: 'Barrier ('.i18n() + state.chart.barrier + ')'});\n   }\n   if(!state.chart.high_barrier && contract.high_barrier) {\n      state.chart.high_barrier = contract.high_barrier;\n      state.chart.high_barrier && state.chart.chart.addPlotLineY({value: state.chart.high_barrier*1, label: 'High Barrier ('.i18n() + state.chart.high_barrier + ')'});\n   }\n   if(!state.chart.low_barrier && contract.low_barrier) {\n      state.chart.low_barrier = contract.low_barrier;\n      state.chart.low_barrier && state.chart.chart.addPlotLineY({value: state.chart.low_barrier*1, label: 'Low Barrier ('.i18n() + state.chart.low_barrier + ')', color: 'red'});\n   }\n}\n\nconst init_dialog = (proposal) => {\n   require(['text!viewtransaction/viewTransaction.html'],(html) => {\n      const root = $(html).i18n();\n      const state = init_state(proposal, root);\n      const on_proposal_open_contract = (data) => update_indicative(data, state);\n\n      const transWin = windows.createBlankWindow(root, {\n         title: proposal.display_name + ' (' + proposal.transaction_id + ')',\n         width: 700,\n         minWidth: 490,\n         minHeight:480,\n         height:480,\n         destroy: () => { },\n         close: function() {\n            view && view.unbind();\n            liveapi.proposal_open_contract.forget(proposal.contract_id);\n            liveapi.events.off('proposal_open_contract', on_proposal_open_contract);\n            for(let i = 0; i < state.onclose.length; ++i)\n               state.onclose[i]();\n            $(this).dialog('destroy').remove();\n            open_dialogs[proposal.transaction_id] = undefined;\n         },\n         open: () => {\n            liveapi.proposal_open_contract.subscribe(proposal.contract_id);\n            liveapi.events.on('proposal_open_contract', on_proposal_open_contract);\n         },\n         resize: () => {\n            state.chart.manual_reflow();\n            // state.chart.chart && state.chart.chart.reflow();\n         },\n         'data-authorized': 'true'\n      });\n\n      transWin.dialog('open');\n      const view = rv.bind(root[0],state)\n      open_dialogs[proposal.transaction_id] = transWin;\n   });\n}\n\nconst sell_at_market = (state, root) => {\n   state.sell.sell_at_market_enabled = false; /* disable button */\n   require(['text!viewtransaction/viewTransactionConfirm.html', 'css!viewtransaction/viewTransactionConfirm.css']);\n   liveapi.send({sell: state.contract_id, price: 0 /* to sell at market */})\n      .then((data) => {\n         state.table.user_sold = true; //User successfully sold the contract\n         const sell = data.sell;\n         require(['text!viewtransaction/viewTransactionConfirm.html', 'css!viewtransaction/viewTransactionConfirm.css'],\n            (html) => {\n               const buy_price = state.table.buy_price;\n               const state_confirm = {\n                  longcode: state.longcode,\n                  buy_price: buy_price,\n                  sell_price: sell.sold_for,\n                  return_percent: (100*(sell.sold_for - buy_price)/buy_price).toFixed(2)+'%',\n                  transaction_id: sell.transaction_id,\n                  balance: sell.balance_after,\n                  currency: state.table.currency,\n               };\n               const $html = $(html).i18n();\n               root.after($html);\n               const view_confirm = rv.bind($html[0], state_confirm);\n               state.onclose.push(() => {\n                  view_confirm && view_confirm.unbind();\n               });\n            });\n      })\n      .catch((err) => {\n         $.growl.error({ message: err.message });\n         console.error(err);\n      });\n}\n\nconst init_state = (proposal, root) =>{   \n   const state = {\n      route: {\n         value: 'table',\n         update:(value) => { state.route.value = value; }\n      },\n      contract_id: proposal.contract_id,\n      longcode: proposal.longcode,\n      validation: proposal.validation_error\n      || (!proposal.is_valid_to_sell && 'Resale of this contract is not offered'.i18n())\n      || ((proposal.is_settleable || proposal.is_sold) && 'This contract has expired'.i18n()) || '-',\n      table: {\n         is_ended: proposal.is_settleable || proposal.is_sold,\n         currency: (proposal.currency ||  'USD') + ' ',\n         current_spot_time: proposal.current_spot_time,\n         current_spot: proposal.current_spot,\n         contract_type: proposal.contract_type,\n         date_start: proposal.date_start,\n         date_expiry: proposal.date_expiry,\n         user_sold: proposal.sell_time && proposal.sell_time < proposal.date_expiry,\n\n         entry_tick: proposal.entry_tick || proposal.entry_spot,\n         entry_tick_time: proposal.entry_tick_time ? proposal.entry_tick_time * 1 : proposal.date_start * 1,\n         exit_tick: proposal.exit_tick,\n         exit_tick_time: proposal.exit_tick_time,\n\n         barrier_count: proposal.barrier_count,\n         low_barrier: proposal.low_barrier,\n         high_barrier: proposal.high_barrier,\n\n         buy_price: proposal.buy_price,\n         bid_price: undefined,\n         final_price: proposal.is_sold ? proposal.sell_price && formatPrice(proposal.sell_price, proposal.currency ||  'USD') : undefined,\n\n         tick_count: proposal.tick_count,\n         prediction: proposal.prediction,\n\n         sell_time: proposal.sell_spot_time * 1 || undefined,\n         sell_spot: proposal.sell_spot,\n         sell_price: proposal.is_sold ? proposal.sell_price : undefined,\n         purchase_time: proposal.purchase_time,\n         is_sold_at_market: false,\n      },\n      chart: {\n         chart: null, /* highchart object */\n         symbol: proposal.symbol,\n         display_name: proposal.display_name,\n         barrier: proposal.barrier,\n         high_barrier: proposal.high_barrier,\n         low_barrier: proposal.low_barrier,\n         loading: 'Loading ' + proposal.display_name + ' ...',\n         type: 'ticks', // could be 'tick' or 'ohlc'\n      },\n      sell: {\n         bid_prices: [],\n         bid_price: {\n            unit: undefined,\n            cent: undefined,\n            value: undefined,\n         },\n         sell_at_market_enabled: true,\n         is_valid_to_sell: false,\n      },\n      onclose: [], /* cleanup callback array when dialog is closed */\n   };\n   // This values are required for SPREADS type contract.\n   if(proposal.contract_type.indexOf(\"SPREAD\") === 0){\n      const shortcode = proposal.shortcode.toUpperCase();\n      const details   = shortcode.replace(proposal.underlying.toUpperCase() + '_', '').split('_');\n      state.table.contract_type = \"SPREAD\";\n      state.table.status = proposal.is_sold? \"Closed\": \"Open\";\n      state.table.per_point = details[1];\n      state.table.stop_loss = details[3];\n      state.table.stop_profit = details[4];\n      state.table.is_point = details[5] === 'POINT';\n      state.table.is_up = proposal.shortcode['spread'.length] === 'U';\n      state.table.direction = state.table.is_up ? 1 : -1;\n      state.table.amount_per_point = state.table.is_up? \"+\" + state.table.per_point : \"-\" + state.table.per_point;\n      state.table.is_sold = proposal.is_sold || proposal.is_expired;\n      state.table.exit_tick = proposal.exit_level\n      state.table.exit_tick_time = state.table.is_sold ? proposal.sell_time : undefined;\n      state.table.profit = parseFloat(proposal.current_value_in_dollar);\n      state.table.profit_point = parseFloat(proposal.current_value_in_point);\n      state.table.pro_los = \"Profit/Loss (\" + state.table.currency.replace(\" \",\"\") + \")\";\n      state.table.entry_tick = proposal.entry_level;\n      state.table.entry_tick_time = proposal.purchase_time;\n      state.table.current_spot = proposal.current_level;\n      state.table.current_spot_time = proposal.current_spot_time;\n      state.table.stop_loss_level = proposal.stop_loss_level;\n      state.table.stop_profit_level = proposal.stop_profit_level;\n\n      state.table.request ={\n         \"proposal\"        : 1,\n         \"symbol\"          : proposal.underlying,\n         \"currency\"        : proposal.currency,\n         \"contract_type\"   : details[0],\n         \"amount_per_point\": state.table.per_point,\n         \"stop_loss\"       : state.table.stop_loss,\n         \"stop_profit\"     : state.table.stop_profit,\n         \"stop_type\"       : details[5].toLowerCase()\n      };\n   }\n\n   state.sell.sell = () => sell_at_market(state, root);\n\n   state.chart.manual_reflow = () => {\n      /* TODO: find a better solution for resizing the chart  :/ */\n      const h = -1 * (root.find('.longcode').height() + root.find('.tabs').height() + root.find('.footer').height()) - 16;\n      if(!state.chart.chart) return;\n      const container = root;// root.find('.chart-container');\n      const transactionChart = container.find(\".transaction-chart\");\n      const width = container.width() - 10,\n         height = container.height();\n      state.chart.chart.setSize(width, height + h , false);\n      state.chart.chart.hasUserSize = null;\n      if (state.chart.chart.series[0] && state.chart.chart.series[0].data.length === 0)\n         state.chart.chart.showLoading();\n      else\n         state.chart.chart.hideLoading();\n   };\n\n   get_chart_data(state, root);\n\n   return state;\n}\n\nconst update_live_chart = (state, granularity) => {\n   const key = chartingRequestMap.keyFor(state.chart.symbol, granularity);\n   if(!chartingRequestMap[key]){\n      const req = {\n         symbol: state.chart.symbol,\n         subscribe: 1,\n         granularity: granularity,\n         style: granularity === 0 ? 'ticks' : 'candles',\n      };\n      chartingRequestMap.register(req)\n         .catch((err) => {\n            $.growl.error({ message: err.message });\n            console.error(err);\n         });\n   }\n   /* don't register if already someone else has registered for this symbol */\n   else { chartingRequestMap.subscribe(key); }\n\n   let on_tick = undefined;\n   let on_candles = undefined;\n\n   if(granularity === 0) {\n      let perv_tick = null;\n      on_tick = liveapi.events.on('tick', (data) => {\n         if (!data.tick || data.tick.symbol !== state.chart.symbol)\n            return;\n         const chart = state.chart.chart;\n         const tick = data.tick;\n         chart && chart.series[0].addPoint([tick.epoch*1000, tick.quote*1]);\n         /* stop updating when contract is expired */\n         if(tick.epoch*1 > state.table.date_expiry*1 || state.table.is_sold) {\n            if(perv_tick && state.table.contract_type !== 'SPREAD') {\n               state.table.exit_tick = perv_tick.quote;\n               state.table.exit_tick_time = perv_tick.epoch*1;\n               state.validation = 'This contract has expired'.i18n();\n               state.table.is_ended = true;\n            }\n            clean_up();\n         }\n         perv_tick = tick;\n      });\n   }\n   else {\n      on_candles = liveapi.events.on('ohlc', (data) => {\n         const data_key = chartingRequestMap.keyFor(data.ohlc.symbol, data.ohlc.granularity);\n         if(key != data_key)\n            return;\n         const chart = state.chart.chart;\n         if(!chart)\n            return;\n\n         const series = chart.series[0];\n         const last = series.data[series.data.length - 1];\n\n         const c = data.ohlc;\n         const ohlc = [c.open_time*1000, c.open*1, c.high*1, c.low*1, c.close*1];\n\n         if(last.x != ohlc[0]) {\n            series.addPoint(ohlc, true, true);\n         }\n         else {\n            last.update(ohlc,true);\n         }\n         /* stop updating when contract is expired */\n         if(c.epoch*1 > state.table.date_expiry*1) {\n            clean_up();\n         }\n      });\n   }\n\n   let clean_up_done = false;\n   const clean_up = () => {\n      if(clean_up_done) return;\n      clean_up_done = true;\n      chartingRequestMap.unregister(key);\n      on_tick && liveapi.events.off('tick', on_tick);\n      on_candles && liveapi.events.off('candles', on_candles);\n   };\n   state.onclose.push(clean_up); /* clean up */\n}\n\nconst get_chart_data = (state, root) => {\n   const table = state.table;\n   const duration = Math.min(state.table.date_expiry*1, moment.utc().unix()) - (state.table.purchase_time || state.table.date_start);\n   let granularity = 0;\n   let margin = 0; // time margin\n   if(duration <= 60*60) { granularity = 0; } // 1 hour\n   else if(duration <= 2*60*60) { granularity = 60; } // 2 hours\n   else if(duration <= 6*60*60) { granularity = 120; } // 6 hours\n   else if(duration <= 24*60*60) { granularity = 300; } // 1 day\n   else { granularity = 3600 } // more than 1 day\n   margin = granularity === 0 ? Math.max(3, 30*duration/(60*60) | 0) : 3*granularity;\n   const request = {\n      ticks_history: state.chart.symbol,\n      start: (state.table.purchase_time || state.table.date_start)*1 - margin, /* load around 2 more thicks before start */\n      end: state.table.sell_time ? state.table.sell_time*1 + margin : state.table.exit_tick_time ? state.table.exit_tick_time*1 + margin : 'latest',\n      style: 'ticks',\n      count: 4999, /* maximum number of ticks possible */\n   };\n   if(granularity !== 0) {\n      request.granularity = granularity;\n      request.style = 'candles';\n      state.chart.type = 'candles';\n   }\n\n   if(!state.table.is_ended) {\n      update_live_chart(state, granularity);\n   }\n\n   return liveapi.send(request).then((data) => {\n\n      state.chart.loading = '';\n\n      const options = { title: state.chart.display_name };\n      if(data.history) options.history = data.history;\n      if(data.candles) options.candles = data.candles;\n      const chart = init_chart(root, state, options);\n      \n      state.table.entry_tick_time && chart.addPlotLineX({ value: state.table.entry_tick_time*1000, label: 'Entry Spot'.i18n()});\n\n      (!state.table.user_sold || state.table.contract_type === \"SPREAD\") && chart.addPlotLineX({ value: state.table.exit_tick_time*1000, label: 'Exit Spot'.i18n(), text_left: true});\n\n      state.table.entry_tick_time && chart.addPlotLineX({ value: state.table.entry_tick_time*1000, label: 'Entry Spot'.i18n()});\n      !state.table.user_sold && state.table.exit_tick_time && chart.addPlotLineX({ value: state.table.exit_tick_time*1000, label: 'Exit Spot'.i18n(), text_left: true});\n\n      !state.table.user_sold && state.table.date_expiry && chart.addPlotLineX({ value: state.table.date_expiry*1000, label: 'End Time'.i18n()});\n      state.table.date_start && chart.addPlotLineX({ value: state.table.date_start*1000, label: 'Start Time'.i18n() ,text_left: true });\n\n      state.chart.barrier && chart.addPlotLineY({value: state.chart.barrier*1, label: 'Barrier ('.i18n() + state.chart.barrier + ')'});\n      state.chart.high_barrier && chart.addPlotLineY({value: state.chart.high_barrier*1, label: 'High Barrier ('.i18n() + state.chart.high_barrier + ')'});\n      state.chart.low_barrier && chart.addPlotLineY({value: state.chart.low_barrier*1, label: 'Low Barrier ('.i18n() + state.chart.low_barrier + ')', color: 'red'});\n\n      state.table.stop_loss_level && chart.addPlotLineY({value: state.table.stop_loss_level*1, label: 'Stop Loss ('.i18n() + state.table.stop_loss_level + ')', color: 'red'});\n      state.table.stop_profit_level && chart.addPlotLineY({value: state.table.stop_profit_level*1, label: 'Stop Profit ('.i18n() + state.table.stop_profit_level + ')'});\n\n      state.table.user_sold && chart.addPlotLineX({ value: state.table.sell_time*1000, label: 'Sell Spot'.i18n(), text_left: true});\n\n      state.chart.chart = chart;\n      state.chart.manual_reflow();\n   })\n      .catch((err) => {\n         state.chart.loading = err.message;\n         console.error(err);\n      });\n}\n\nexport default  { init };\n"]}