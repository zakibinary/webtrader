{"version":3,"sources":["../../../../src/navigation/menu.es6"],"names":["extractFilteredMarkets","trading_times_data","options","markets","trading_times","map","m","market","name","display_name","submarkets","sm","submarket","symbols","filter","instruments","sym","symbol","delay_amount","events","times","settlement","feed_license","length","extractChartableMarkets","sortMenu","sort_fn","sortAlphaNum","isArray","rank","sortBy","o","toLowerCase","forEach","sort","refreshMenu","root","callback","menu","s","i","pip","join","$menu","find","remove","append","on","e","a","target","text","$li","closest","attr","detach","position","collision"],"mappings":";;;;;;;;;;;;;;;;;;;;AAQA;;;;;AARC;;;AAaM,OAAMA,0DAAyB,SAAzBA,sBAAyB,CAACC,kBAAD,EAAqBC,OAArB,EAAiC;AACpE,UAAMC,UAAUF,mBAAmBG,aAAnB,CAAiCD,OAAjC,CAAyCE,GAAzC,CAA6C,UAACC,CAAD,EAAO;AACjE,aAAMC,SAAS;AACZC,kBAAMF,EAAEE,IADI;AAEZC,0BAAcH,EAAEE;AAFJ,UAAf;AAIAD,gBAAOG,UAAP,GAAoBJ,EAAEI,UAAF,CAAaL,GAAb,CAAiB,UAACM,EAAD,EAAQ;AAC1C,gBAAMC,YAAY;AACfJ,qBAAMG,GAAGH,IADM;AAEfC,6BAAcE,GAAGH;AAFF,aAAlB;AAIA,gBAAIK,UAAUF,GAAGE,OAAjB;AACA,gBAAIX,WAAWA,QAAQY,MAAvB,EAA+B;AAC5BD,yBAAUA,QAAQC,MAAR,CAAeZ,QAAQY,MAAvB,CAAV;AACHF,sBAAUG,WAAV,GAAwBF,QAAQR,GAAR,CAAY,UAACW,GAAD,EAAS;AAC1C,sBAAO;AACJC,0BAAQD,IAAIC,MADR;AAEJR,gCAAcO,IAAIR,IAFd;AAGJU,gCAAcF,IAAIE,YAAJ,IAAoB,CAH9B;AAIJC,0BAAQH,IAAIG,MAJR;AAKJC,yBAAOJ,IAAII,KALP;AAMJC,8BAAYL,IAAIK,UANZ;AAOJC,gCAAcN,IAAIM,YAAJ,IAAoB;AAP9B,gBAAP;AASF,aAVuB,CAAxB;AAWA,mBAAOV,SAAP;AACF,UApBmB;AAqBpB;AArBoB,UAsBhBE,MAtBgB,CAuBd,UAACH,EAAD;AAAA,mBAASA,GAAGI,WAAH,CAAeQ,MAAf,GAAwB,CAAjC;AAAA,UAvBc,CAApB;AAyBA,gBAAOhB,MAAP;AACF,OA/Be,CAAhB;;AAiCA,aAAOJ,OAAP;AACF,IAnCM;;AAqCA,OAAMqB,4DAA0B,SAA1BA,uBAA0B,CAACvB,kBAAD,EAAwB;AAC5D,aAAOD,uBAAuBC,kBAAvB,EAA2C;AAC/Ca,iBAAQ,gBAACE,GAAD;AAAA,mBAAUA,IAAIM,YAAJ,KAAqB,WAA/B;AAAA;AADuC,OAA3C,KAED,EAFN;AAGF,IAJM;;AAMA,OAAMG,8BAAW,SAAXA,QAAW,CAACtB,OAAD,EAAa;AAClC,UAAMuB,UAAUC,aAAa,cAAb,CAAhB;AACA;AACA,UAAG,iBAAEC,OAAF,CAAUzB,OAAV,CAAH,EAAuB;;AAEpB,aAAM0B,OAAO,EAAE,SAAS,CAAX,EAAc,WAAW,CAAzB,EAA4B,UAAU,CAAtC,EAAyC,eAAe,CAAxD,EAA2D,UAAU,CAArE,EAAb;AACA1B,mBAAU,iBAAE2B,MAAF,CAAU3B,OAAV,EAAmB,UAAC4B,CAAD;AAAA,mBAAOF,KAAKE,EAAEvB,IAAF,CAAOwB,WAAP,EAAL,CAAP;AAAA,UAAnB,CAAV;AACA7B,iBAAQ8B,OAAR,CAAgB,UAAC1B,MAAD,EAAY;AACzB,gBAAG,iBAAEqB,OAAF,CAAUrB,OAAOG,UAAjB,CAAH,EAAiC;AAC9B;AACAH,sBAAOG,UAAP,CAAkBwB,IAAlB,CAAuBR,OAAvB;AACAnB,sBAAOG,UAAP,CAAkBuB,OAAlB,CAA0B,UAACrB,SAAD,EAAe;AACtC,sBAAG,iBAAEgB,OAAF,CAAUhB,UAAUG,WAApB,CAAH,EAAqC;AAClC;AACAH,+BAAUG,WAAV,CAAsBmB,IAAtB,CAA2BR,OAA3B;AACF;AACH,gBALD;AAMF;AACH,UAXD;AAYF;AACD,aAAOvB,OAAP;AACF,IArBM;;AAuBA,OAAMgC,oCAAc,SAAdA,WAAc,CAACC,IAAD,EAAOjC,OAAP,EAAgBkC,QAAhB,EAA6B;AACrD,UAAMC,gBACHnC,QAAQE,GAAR,CAAY;AAAA,8BAAiBC,EAAEG,YAAnB,kBACTH,EAAEI,UAAF,CAAaL,GAAb,CAAiB;AAAA,iCAAiBkC,EAAE9B,YAAnB,kBACd8B,EAAExB,WAAF,CAAcV,GAAd,CAAkB;AAAA,wCAAoBmC,EAAEvB,MAAtB,iBAAsCuB,EAAEC,GAAxC,gBAAqDD,EAAE/B,YAAvD;AAAA,aAAlB,EAAoGiC,IAApG,CAAyG,EAAzG,CADc;AAAA,UAAjB,EAEcA,IAFd,CAEmB,EAFnB,CADS;AAAA,OAAZ,EAIcA,IAJd,CAImB,EAJnB,CADG,UAAN;AAOA,UAAMC,QAAQ,sBAAEL,IAAF,CAAd;AACAF,WAAKQ,IAAL,CAAU,MAAV,EAAkBN,IAAlB,CAAuB,SAAvB,EAAkCO,MAAlC;AACAT,WAAKU,MAAL,CAAYH,KAAZ;AACAA,YAAMC,IAAN,CAAW,YAAX,EAAyBG,EAAzB,CAA4B,OAA5B,EAAqC,UAACC,CAAD,EAAGC,CAAH,EAAS;AAC3C,aAAMxC,eAAe,sBAAEuC,EAAEE,MAAJ,EAAYC,IAAZ,EAArB;AACA,aAAMC,MAAM,sBAAEJ,EAAEE,MAAJ,EAAYG,OAAZ,CAAoB,IAApB,CAAZ;AACA,aAAMpC,SAASmC,IAAIE,IAAJ,CAAS,QAAT,CAAf;AACA,aAAMb,MAAMW,IAAIE,IAAJ,CAAS,KAAT,CAAZ;AACAX,eAAMY,MAAN,GAAgBnB,KAAKU,MAAL,CAAYH,KAAZ;AAChBN,kBAASpB,MAAT,EAAiBR,YAAjB,EAA+BgC,GAA/B;AACF,OAPD;AAQAE,YAAML,IAAN,CAAW,EAAEkB,UAAU,EAAEC,WAAW,KAAb,EAAZ,EAAX;AACF,IApBM;;qBAsBQ;AACZjC,sDADY;AAEZxB,oDAFY;AAGZyB,wBAHY;AAIZU;AAJY,I","file":"menu.js","sourcesContent":["ï»¿/**\n * Created by amin on October 30, 2015.\n */\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport navigation from './navigation';\nimport '../common/util';\n\n/* you can filter the symbols with the options parameter, for example:\n   options: {\n       filter: (sym) => (sym.feed_license !== 'realtime')\n   }\n*/\nexport const extractFilteredMarkets = (trading_times_data, options) => {\n   const markets = trading_times_data.trading_times.markets.map((m) => {\n      const market = {\n         name: m.name,\n         display_name: m.name\n      };\n      market.submarkets = m.submarkets.map((sm) => {\n         const submarket = {\n            name: sm.name,\n            display_name: sm.name\n         };\n         let symbols = sm.symbols;\n         if (options && options.filter) /* filter the symbols */\n            symbols = symbols.filter(options.filter);\n         submarket.instruments = symbols.map((sym) => {\n            return {\n               symbol: sym.symbol,\n               display_name: sym.name,\n               delay_amount: sym.delay_amount || 0,\n               events: sym.events,\n               times: sym.times,\n               settlement: sym.settlement,\n               feed_license: sym.feed_license || 'realtime'\n            };\n         });\n         return submarket;\n      })\n      /* there might be a submarket (e.g \"Americas\") which does not have any symbols after filtering */\n         .filter(\n            (sm) => (sm.instruments.length > 0)\n         );\n      return market;\n   });\n\n   return markets;\n};\n\nexport const extractChartableMarkets = (trading_times_data) => {\n   return extractFilteredMarkets(trading_times_data, {\n      filter: (sym) => (sym.feed_license !== 'chartonly')\n   }) || [];\n};\n\nexport const sortMenu = (markets) => {\n   const sort_fn = sortAlphaNum('display_name');\n   //Sort market\n   if($.isArray(markets)) {\n\n      const rank = { \"forex\": 1, \"indices\": 2, \"stocks\": 3, \"commodities\": 4, \"volidx\": 5 };\n      markets = _.sortBy( markets, (o) => rank[o.name.toLowerCase()]);\n      markets.forEach((market) => {\n         if($.isArray(market.submarkets)) {\n            // Sort sub-markets\n            market.submarkets.sort(sort_fn);\n            market.submarkets.forEach((submarket) => {\n               if($.isArray(submarket.instruments)) {\n                  // Sort instruments\n                  submarket.instruments.sort(sort_fn);\n               }\n            });\n         }\n      });\n   }\n   return markets;\n};\n\nexport const refreshMenu = (root, markets, callback) => {\n   const menu = `<ul>${\n      markets.map(m => `<li><div>${m.display_name}</div><ul>${\n         m.submarkets.map(s => `<li><div>${s.display_name}</div><ul>${\n            s.instruments.map(i => `<li symbol='${i.symbol}' pip='${i.pip}'><div>${i.display_name}</div></li>`).join('')\n         }</ul></li>`).join('')\n      }</ul></li>`).join('')\n   }</ul>`;\n   const $menu = $(menu);\n   root.find('> ul').menu('destroy').remove();\n   root.append($menu);\n   $menu.find('li[symbol]').on('click', (e,a) => {\n      const display_name = $(e.target).text();\n      const $li = $(e.target).closest('li');\n      const symbol = $li.attr('symbol');\n      const pip = $li.attr('pip');\n      $menu.detach(); root.append($menu);\n      callback(symbol, display_name, pip);\n   });\n   $menu.menu({ position: { collision: 'fit' } });\n}\n\nexport default {\n   extractChartableMarkets,\n   extractFilteredMarkets,\n   sortMenu,\n   refreshMenu\n};\n"]}