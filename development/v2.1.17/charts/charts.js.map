{"version":3,"sources":["../../../../src/charts/charts.es6"],"names":["lang","local_storage","get","value","replace","require","indicator_values","JSON","parse","values","Highcharts","Chart","prototype","get_indicators","chart","indicators","series","length","forEach","ind","id","entry","push","name","long_display_name","options","set_indicators","onSeriesID","addIndicator","get_indicator_series","set_indicator_series","seri","get_overlay_count","overlayCount","s","index","isInstrument","indexOf","setOptions","global","useUTC","canvasToolsURL","thousandsSep","getOptions","Object","keys","key","i18n","initHighchartIndicators","barsTable","destroy","containerIDWithHash","timePeriod","instrumentCode","keyFor","unregister","generate_csv","data","filename","instrumentName","lines","dataToBeProcessTolines","flattenData","d","ret","isArray","time","utc","format","slice","join","isNumber","high","open","low","close","isObject","title","text","FractalUpdateObject","x","isBull","isBear","y","toString","newDataLines","map","ohlc","split","bars","chain","find","instrumentCdAndTp","simplesort","concat","b","growl","notice","message","Parallel","spawn","l","line","dd","added","nDl","temp","then","csv","blob","Blob","type","navigator","msSaveBlob","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","error","console","drawChart","onload","overlays","current_symbol","cached","send","active_symbols","filter","symbol","highcharts","removeChart","warn","delayAmount","events","load","event","showLoading","init","execute","retrieveChartDataAndRender","series_compare","catch","err","msg","setTimeout","ovlay","overlay","displaySymbol","delay_amount","isFunction","margin","spacing","spacingLeft","marginLeft","marginBottom","spacingBottom","enabled","plotOptions","candlestick","shadow","afterAnimate","removeCurrentPrice","addCurrentPrice","mousewheel","hideLoading","credits","href","xAxis","afterSetExtremes","labels","formatter","str","axis","defaultLabelFormatter","call","ordinal","scrollbar","liveRedraw","yAxis","opposite","reserveSpace","pip","digits_after_decimal","toFixed","align","rangeSelector","tooltip","crosshairs","width","color","dashStyle","locale","each","points","i","point","enabledIndicators","exporting","triggerReflow","reflow","refresh","newTimePeriod","newChartType","chartObj","loadedMarketData","log","compare","marketDataObj","getSpecificMarketData","trim","extend","overlayInsCode","overlayInsName","indicator_series","mainSeries_timePeriod","mainSeries_type","onChartIndicator","update","Promise","resolve","reject","trace","changeTitle","newTitle","setTitle"],"mappings":"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","file":"charts.js","sourcesContent":["/**\n * Created by arnab on 2/11/15.\n */\nimport $ from 'jquery';\nimport chartingRequestMap from 'charts/chartingRequestMap';\nimport liveapi from 'websockets/binary_websockets';\nimport ohlc_handler from 'websockets/ohlc_handler';\nimport currentPrice from 'currentPriceIndicator';\nimport indicators from 'charts/indicators/highcharts_custom/indicators';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport indicators_json from 'text!charts/indicators/indicators.json';\nimport 'highcharts-exporting';\nimport 'common/util';\nimport 'paralleljs';\nimport 'jquery-growl';\nimport $Hmw from 'common/highchartsMousewheel';\nimport ins from 'instruments/instruments';\n\nconst lang = local_storage.get(\"i18n\") ? local_storage.get(\"i18n\").value.replace(\"_\",\"-\") : 'en';\nif(lang !== \"en\") // Load moment js locale file.\n    require(['moment-locale/'+lang]); \n\nconst indicator_values = _(JSON.parse(indicators_json)).values().value();\nHighcharts.Chart.prototype.get_indicators = function() {\n    const chart = this;\n    const indicators = [];\n    if (chart.series.length > 0) {\n        indicator_values.forEach((ind) => {\n            const id = ind.id;\n            chart.series[0][id] && chart.series[0][id].forEach((entry) => {\n                indicators.push({ id: id, name: ind.long_display_name, options: entry.options })\n            });\n        });\n    }\n\n    return indicators;\n}\n\nHighcharts.Chart.prototype.set_indicators = function(indicators) {\n    const chart = this;\n    if (chart.series && chart.series[0]) {\n        indicators.forEach((ind) => {\n            if (ind.options.onSeriesID) { //make sure that we are using the new onSeriesID value\n                ind.options.onSeriesID = chart.series[0].options.id;\n            }\n            chart.series[0].addIndicator(ind.id, ind.options);\n        });\n    }\n}\n\nHighcharts.Chart.prototype.get_indicator_series = function() {\n    const chart = this;\n    const series = [];\n    if (chart.series.length > 0) {\n        indicator_values.forEach((ind) => {\n            const id = ind.id;\n            chart.series[0][id] && chart.series[0][id][0] && series.push({ id: id, series: chart.series[0][id] })\n        });\n    }\n    return series;\n}\n\nHighcharts.Chart.prototype.set_indicator_series = function(series) {\n    const chart = this;\n    if (!chart.series || chart.series.length == 0) {\n        return;\n    }\n    series.forEach((seri) => {\n        chart.series[0][seri.id] = seri.series;\n    });\n}\n\nHighcharts.Chart.prototype.get_overlay_count = function() {\n    let overlayCount = 0;\n    this.series.forEach((s, index) => {\n        if (s.options.isInstrument && s.options.id.indexOf('navigator') == -1 && index != 0) {\n            overlayCount++;\n        }\n    });\n    return overlayCount;\n}\n\n$(() => {\n\n    Highcharts.setOptions({\n        global: {\n            useUTC: true,\n            canvasToolsURL: \"https://code.highcharts.com/modules/canvas-tools.js\"\n        },\n        lang: { thousandsSep: ',' } /* format numbers with comma (instead of space) */\n    });\n\n    // Localizing Highcharts.\n    const lang = Highcharts.getOptions().lang;\n    Object.keys(lang).forEach((key) => {\n    if(typeof lang[key] === 'object') {\n        lang[key].forEach(\n            (value, index) => { lang[key][index] = value.i18n();}\n        );\n        return;\n    }\n    lang[key] = lang[key].i18n();\n    });\n});\n\nindicators.initHighchartIndicators(chartingRequestMap.barsTable);\n\nexport const destroy = (options) => {\n    const containerIDWithHash = options.containerIDWithHash,\n        timePeriod = options.timePeriod,\n        instrumentCode = options.instrumentCode;\n    if (!timePeriod || !instrumentCode) return;\n\n    //granularity will be 0 for tick timePeriod\n    const key = chartingRequestMap.keyFor(instrumentCode, timePeriod);\n    chartingRequestMap.unregister(key, containerIDWithHash);\n}\n\nexport const generate_csv = (chart, data) => {\n    const filename = data.instrumentName + ' (' + data.timePeriod + ')' + '.csv';\n\n    let lines = [],\n        dataToBeProcessTolines = [];\n    const flattenData = (d) => {\n        let ret = null;\n        if (_.isArray(d) && d.length > 3) {\n            const time = d[0];\n            ret = '\"' + moment.utc(time).format('YYYY-MM-DD HH:mm') + '\"' + ',' + d.slice(1, d.length).join(',');\n        } //OHLC case\n        else if (_.isNumber(d.high)) ret = '\"' + moment.utc(d.time).format('YYYY-MM-DD HH:mm') + '\"' + ',' + d.open + ',' + d.high + ',' + d.low + ',' + d.close;\n        else if (_.isArray(d) && d.length > 1) ret = '\"' + moment.utc(d[0]).format('YYYY-MM-DD HH:mm') + '\"' + ',' + d[1]; //Tick chart case\n        else if (_.isObject(d) && d.title && d.text) {\n            if (d instanceof FractalUpdateObject) {\n                ret = '\"' + moment.utc(d.x || d.time).format('YYYY-MM-DD HH:mm') + '\"' + ',' + (d.isBull ? 'UP' : d.isBear ? 'DOWN' : ' ');\n            } else ret = '\"' + moment.utc(d.x || d.time).format('YYYY-MM-DD HH:mm') + '\"' + ',' + (d.text);\n        } else if (_.isNumber(d.y)) ret = '\"' + moment.utc(d.x || d.time).format('YYYY-MM-DD HH:mm') + '\"' + ',' + (d.y || d.close);\n        else ret = d.toString(); //Unknown case\n        return ret;\n    };\n    chart.series.forEach((series, index) => {\n        if (series.options.id === 'navigator') return true;\n        const newDataLines = series.options.data.map((d) => {\n            return flattenData(d);\n        }) || [];\n        if (index == 0) {\n            const ohlc = newDataLines[0].split(',').length > 2;\n            if (ohlc) lines.push('Date,Time,Open,High,Low,Close');\n            else lines.push('Date,Time,\"' + series.options.name + '\"');\n            //newDataLines is incorrect - get it from lokijs\n            const key = chartingRequestMap.keyFor(data.instrumentCode, data.timePeriod);\n            const bars = chartingRequestMap.barsTable\n                .chain()\n                .find({ instrumentCdAndTp: key })\n                .simplesort('time', false)\n                .data();\n            lines = lines.concat(bars.map((b) => {\n                return ohlc ? ['\"' + moment.utc(b.time).format('YYYY-MM-DD HH:mm') + '\"', b.open, b.high, b.low, b.close].join(',') : ['\"' + moment.utc(b.time).format('YYYY-MM-DD HH:mm:ss') + '\"', b.close].join(',');\n            }));\n        } else {\n            lines[0] += ',\"' + series.options.name + '\"'; //Add header\n            dataToBeProcessTolines.push(newDataLines);\n        }\n    });\n\n    $.growl.notice({ message: 'Downloading .csv'.i18n() });\n    //merge here\n    new Parallel([lines, dataToBeProcessTolines])\n        .spawn((data) => {\n            let l = data[0];\n            const d = data[1];\n            l = l.map((line, index) => {\n\n                d.forEach((dd) => {\n                    let added = false;\n                    dd.forEach((nDl) => {\n                        if (nDl) {\n                            const temp = nDl.split(',');\n                            if (line.split(',')[0] === temp[0]) {\n                                line += ',' + temp.slice(1, temp.length).join(',');\n                                added = true;\n                                return false;\n                            }\n                        }\n                    });\n                    if (line.indexOf('Date') == -1 && !added) line += ','; //Add a gap since we did not add a value\n                });\n                if (index === 0) {\n                    return line;\n                }\n                return line.split(\" \").join(\"\\\",\\\"\"); //Separate date and time.\n            });\n            return l;\n        })\n        .then((data) => {\n            const csv = data.join('\\n'); //(is_tick ? 'Date,Tick\\n' : 'Date,Open,High,Low,Close\\n') + lines.join('\\n');\n            const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n            if (navigator.msSaveBlob) { // IE 10+\n                navigator.msSaveBlob(blob, filename);\n            } else {\n                const link = document.createElement(\"a\");\n                if (link.download !== undefined) { /* Evergreen Browsers :) */\n                    const url = URL.createObjectURL(blob);\n                    link.setAttribute(\"href\", url);\n                    link.setAttribute(\"download\", filename);\n                    link.style.visibility = 'hidden';\n                    document.body.appendChild(link);\n                    link.click();\n                    document.body.removeChild(link);\n                }\n            }\n        }, (error) => {\n            $.growl.error({ message: 'Error downloading .csv'.i18n() });\n            console.error(error);\n        });\n\n}\n\n/**\n * This method is the core and the starting point of highstock charts drawing\n * @param containerIDWithHash\n * @param instrumentCode\n * @param instrumentName\n * @param timePeriod\n * @param type\n * @param onload // optional onload callback\n */\nexport const drawChart = (containerIDWithHash, options, onload) => {\n    let indicators = [];\n    let overlays = [];\n    let current_symbol = [];\n\n    liveapi.cached.send({active_symbols: \"brief\"}).then((data)=>{\n        current_symbol = _.filter(data.active_symbols,{symbol: options.instrumentCode})[0];\n    });\n\n    if ($(containerIDWithHash).highcharts()) {\n        //Just making sure that everything has been cleared out before starting a new thread\n        const key = chartingRequestMap.keyFor(options.instrumentCode, options.timePeriod);\n        chartingRequestMap.removeChart(key, containerIDWithHash);\n        const chart = $(containerIDWithHash).highcharts();\n        indicators = chart.get_indicators() || [];\n        overlays = options.overlays || [];\n        chart.destroy();\n    }\n    if (options.indicators) { /* this comes only from tracker.js & ChartTemplateManager.js */\n        indicators = options.indicators || [];\n        overlays = options.overlays || [];\n        $(containerIDWithHash).data(\"overlayCount\", overlays.length);\n    }\n\n    /* ignore overlays if chart type is candlestick or ohlc */\n    if ((options.type === 'candlestick' || options.type === 'ohlc') && overlays.length > 0) {\n        /* we should not come here, logging a warning as an alert if we somehow do */\n        console.warn(\"Ingoring overlays because chart type is \" + options.type);\n        overlays = [];\n    }\n\n    //Save some data in DOM\n    $(containerIDWithHash).data({\n        instrumentCode: options.instrumentCode,\n        instrumentName: options.instrumentName,\n        timePeriod: options.timePeriod,\n        type: options.type,\n        delayAmount: options.delayAmount\n    });\n\n    // Create the chart\n    $(containerIDWithHash).highcharts('StockChart', {\n\n        chart: {\n            events: {\n                load: function(event) {\n\n                    this.showLoading();\n                    currentPrice.init();\n                    liveapi.execute(() => {\n                        ohlc_handler.retrieveChartDataAndRender({\n                            timePeriod: options.timePeriod,\n                            instrumentCode: options.instrumentCode,\n                            containerIDWithHash: containerIDWithHash,\n                            type: options.type,\n                            instrumentName: options.instrumentName,\n                            series_compare: options.series_compare,\n                            delayAmount: options.delayAmount\n                        }).catch((err) => {\n                            const msg = 'Error getting data for %1'.i18n().replace('%1', options.instrumentName);\n                            $.growl.error({ message: msg });\n                            const chart = $(containerIDWithHash).highcharts();\n                            chart && chart.showLoading(msg);\n                            console.error(err);\n                        }).then(() => {\n                            const chart = $(containerIDWithHash).highcharts();\n                            /* the data is loaded but is not applied yet, its on the js event loop,\n                               wait till the chart data is applied and then add the indicators */\n                            setTimeout(() => {\n                                chart && chart.set_indicators(indicators); // put back removed indicators\n                                overlays.forEach((ovlay) => {\n                                    overlay(containerIDWithHash, ovlay.symbol, ovlay.displaySymbol, ovlay.delay_amount);\n                                });\n                            }, 0);\n                        });\n                    });\n\n                    if ($.isFunction(onload)) {\n                        onload();\n                    }\n                    this.margin[2] = 5;\n                    this.spacing[2] = 0;\n                }\n            },\n            spacingLeft: 0,\n            marginLeft: 55,\n            /* disable the auto size labels so the Y axes become aligned */\n            marginBottom: 15,\n            spacingBottom: 15\n        },\n\n        navigator: {\n            enabled: true,\n            series: {\n                id: 'navigator'\n            }\n        },\n\n        plotOptions: {\n            candlestick: {\n                shadow: false\n            },\n            series: {\n                events: {\n                    afterAnimate: function() {\n                        if (this.options.isInstrument && this.options.id !== \"navigator\") {\n                            //this.isDirty = true;\n                            //this.isDirtyData = true;\n\n                            //Add current price indicator\n                            //If we already added currentPriceLine for this series, ignore it\n                            //console.log(this.options.id, this.yAxis.plotLinesAndBands);\n                            this.removeCurrentPrice();\n                            this.addCurrentPrice();\n\n                            //Add mouse wheel zooming\n                            $Hmw.mousewheel(containerIDWithHash);\n\n                        }\n\n                        this.chart.hideLoading();\n                        //this.chart.redraw();\n                    }\n                }\n            }\n        },\n\n        title: {\n            text: \"\" //name to display\n        },\n\n        credits: {\n            href: '#',\n            text: '',\n        },\n\n        xAxis: {\n            events: {\n                afterSetExtremes: function() {\n                    /*console.log('This method is called every time the zoom control is changed. TODO.' +\n                     'In future, I want to get more data from server if users is dragging the zoom control more.' +\n                     'This will help to load data on chart forever! We can warn users if they are trying to load' +\n                     'too much data!');*/\n                }\n            },\n            labels: {\n                formatter: function() {\n                    const str = this.axis.defaultLabelFormatter.call(this);\n                    return str.replace('.', '');\n                }\n            },\n            ordinal: false\n        },\n\n        scrollbar: {\n            liveRedraw: false\n        },\n\n        yAxis: [{\n            opposite: false,\n            labels: {\n                reserveSpace: true,\n                formatter: function() {\n                    if(!current_symbol || !current_symbol.pip) return;\n                    const digits_after_decimal = (current_symbol.pip+\"\").split(\".\")[1].length;\n                    if ($(containerIDWithHash).data(\"overlayIndicator\")) {\n                        return (this.value > 0 ? ' + ' : '') + this.value + '%';\n                    } \n                    return this.value.toFixed(digits_after_decimal);\n                },\n                align: 'center'\n            }\n        }],\n\n        rangeSelector: {\n            enabled: false\n        },\n\n        tooltip: {\n            crosshairs: [{\n                width: 2,\n                color: 'red',\n                dashStyle: 'dash'\n            }, {\n                width: 2,\n                color: 'red',\n                dashStyle: 'dash'\n            }],\n            formatter: function() {\n                moment.locale(lang); //Setting locale\n                var s = \"<i>\" + moment.utc(this.x).format(\"dddd, DD MMM YYYY, HH:mm:ss\") + \"</i><br>\";\n                $.each(this.points, function(i){\n                    s += '<span style=\"color:' + this.point.color + '\">\\u25CF </span>';\n                    if(typeof this.point.open !==\"undefined\") { //OHLC chart\n                        s += \"<b>\" + this.series.name + \"</b>\"\n                        s += \"<br>\" + \"  Open\".i18n() + \": \" + this.point.open;\n                        s += \"<br>\" + \"  High\".i18n() + \": \" + this.point.high;\n                        s += \"<br>\" + \"  Low\".i18n() + \": \" + this.point.low;\n                        s += \"<br>\" + \"  Close\".i18n() + \": \" + this.point.close;\n                    } else {\n                        s += this.series.name + \": <b>\" + this.point.y + \"</b>\";\n                    }\n                    s += \"<br>\";\n                })\n                return s;\n            },\n            enabled: true,\n            enabledIndicators: true\n        },\n\n        exporting: {\n            enabled: false,\n            url: 'https://export.highcharts.com',\n            // Naming the File\n            filename: options.instrumentName.split(' ').join('_') + \"(\" + options.timePeriod + \")\"\n        }\n\n    });\n}\n\nexport const triggerReflow = (containerIDWithHash) => {\n    if ($(containerIDWithHash).highcharts()) {\n        $(containerIDWithHash).highcharts().reflow();\n    }\n}\n\nexport const refresh = function(containerIDWithHash, newTimePeriod, newChartType, indicators, overlays) {\n    const instrumentCode = $(containerIDWithHash).data(\"instrumentCode\");\n    if (newTimePeriod) {\n        //Unsubscribe from tickstream.\n        const key = chartingRequestMap.keyFor(instrumentCode, $(containerIDWithHash).data(\"timePeriod\"));\n        chartingRequestMap.unregister(key, containerIDWithHash);\n        $(containerIDWithHash).data(\"timePeriod\", newTimePeriod);\n    }\n    if (newChartType) $(containerIDWithHash).data(\"type\", newChartType);\n    else newChartType = $(containerIDWithHash).data(\"type\", newChartType);\n\n    //Get all series details from this chart\n    const chart = $(containerIDWithHash).highcharts();\n    const chartObj = this;\n    let loadedMarketData = [],\n        series_compare = undefined;\n    /* for ohlc and candlestick series_compare must NOT be percent */\n    if (newChartType !== 'ohlc' && newChartType !== 'candlestick') {\n        $(chart.series).each((index, series) => {\n            console.log('Refreshing : ', series.options.isInstrument, series.options.name);\n            if (series.options.isInstrument) {\n                loadedMarketData.push(series.name);\n                //There could be one valid series_compare value per chart\n                series_compare = series.options.compare;\n            }\n        });\n    }\n    if (!overlays) {\n        overlays = [];\n        loadedMarketData.forEach((value) => {\n            const marketDataObj = ins.getSpecificMarketData(value);\n            if (marketDataObj.symbol != undefined && $.trim(marketDataObj.symbol) != $(containerIDWithHash).data(\"instrumentCode\")) {\n                const overlay = {\n                    symbol: marketDataObj.symbol,\n                    displaySymbol: value,\n                    delay_amount: marketDataObj.delay_amount\n                };\n                overlays.push(overlay);\n            }\n        });\n    }\n    chartObj.drawChart(containerIDWithHash, {\n        instrumentCode: instrumentCode,\n        instrumentName: $(containerIDWithHash).data(\"instrumentName\"),\n        timePeriod: $(containerIDWithHash).data(\"timePeriod\"),\n        type: $(containerIDWithHash).data(\"type\"),\n        series_compare: series_compare,\n        delayAmount: $(containerIDWithHash).data(\"delayAmount\"),\n        overlays: overlays,\n        indicators: indicators\n    });\n\n}\n\nexport const addIndicator = (containerIDWithHash, options) => {\n    if ($(containerIDWithHash).highcharts()) {\n        const chart = $(containerIDWithHash).highcharts();\n        const series = chart.series[0];\n        if (series) {\n            chart.addIndicator($.extend({\n                id: series.options.id\n            }, options));\n        }\n    }\n}\n\n/**\n * Function to overlay instrument on base chart\n * @param containerIDWithHash\n * @param overlayInsCode\n * @param overlayInsName\n */\nexport const overlay = (containerIDWithHash, overlayInsCode, overlayInsName, delayAmount) => {\n    if ($(containerIDWithHash).highcharts()) {\n        const chart = $(containerIDWithHash).highcharts();\n        const indicator_series = chart.get_indicator_series();\n        //const mainSeries_instCode     = $(containerIDWithHash).data(\"instrumentCode\");\n        //const mainSeries_instName     = $(containerIDWithHash).data(\"instrumentName\");\n        /*\n            We have to first set the data to NULL and then recaculate the data and set it back\n            This is needed, else highstocks throws error\n         */\n        const mainSeries_timePeriod = $(containerIDWithHash).data(\"timePeriod\");\n        const mainSeries_type = $(containerIDWithHash).data(\"type\");\n        chart.showLoading();\n        for (let index = 0; index < chart.series.length; index++) {\n            //console.log('Instrument name : ' + chart.series[index].name);\n            const series = chart.series[index];\n            if (series.options.isInstrument || series.options.onChartIndicator) {\n                series.update({\n                    compare: 'percent'\n                });\n            }\n        }\n\n        return new Promise((resolve, reject) => {\n            liveapi.execute(() => {\n                ohlc_handler.retrieveChartDataAndRender({\n                    timePeriod: mainSeries_timePeriod,\n                    instrumentCode: overlayInsCode,\n                    containerIDWithHash: containerIDWithHash,\n                    type: mainSeries_type,\n                    instrumentName: overlayInsName,\n                    series_compare: 'percent',\n                    delayAmount: delayAmount\n                }).then(() => {\n                    chart && chart.set_indicator_series(indicator_series);\n                    if(chart.series[0].data.length ===0){\n                        console.trace();\n                    }\n                    resolve();\n                }).catch(resolve);\n            });\n        });\n    }\n    return Promise.resolve();\n}\n\nexport const changeTitle = (containerIDWithHash, newTitle) => {\n    const chart = $(containerIDWithHash).highcharts();\n    chart.setTitle(newTitle);\n}\n\nexport default {\n    drawChart,\n    destroy,\n    triggerReflow,\n    generate_csv,\n    refresh,\n    addIndicator,\n    overlay,\n    changeTitle\n}\n"]}