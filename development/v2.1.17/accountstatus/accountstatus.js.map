{"version":3,"sources":["../../../../src/accountstatus/accountstatus.es6"],"names":["reposition_dialogs","min","parent","each","top","css","replace","animate","is_shown","AccountStatus","_this","onLogin","response","$ele","authorize","is_virtual","is","slideUp","getStatus","account_status","website_status","get_settings","financial_assessment","mt5_account","tc_accepted","financial_assessment_submitted","is_mlt","test","landing_company_name","is_mf","is_cr","has_mt5_account","mt5_login_list","length","is_authenticated","get_account_status","prompt_client_to_authenticate","terms_conditions_version","client_tnc_status","risk_classification","status","indexOf","checkStatus","events","on","Promise","all","send","cached","get_financial_assessment","model","tc","message","i18n","is_valid","callback","init","risk","tax","currency","local_storage","get","check_currency","authenticate","unwelcome","lang","value","win","window","open","focus","invalid_obj","find","obj","html","slideDown"],"mappings":"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","file":"accountstatus.js","sourcesContent":["import $ from \"jquery\";\nimport liveapi from \"../websockets/binary_websockets\";\nimport _ from \"lodash\";\nimport notice from \"shownotice/shownotice\";\nimport tc from \"../tc/tc\";\nimport financialassessment from \"../financialassessment/financialassessment\";\nimport taxInformation from \"../taxInformation/taxInformation\";\nimport currency from \"../cashier/currency\";\nimport \"../common/util\";\n\nconst reposition_dialogs = (min) => {\n  $('.webtrader-dialog').parent().each(function () {\n    const top = $(this).css('top').replace('px', '') * 1;\n    if (top <= min) {\n      $(this).animate({ top: `${min}px` }, 300);\n    }\n  });\n};\nlet is_shown = false;\n\nclass AccountStatus {\n\n  constructor() {\n    const _this = this;\n    // Initiating account check on login.\n    const onLogin = async (response) => {\n      const $ele = $(\"#msg-notification\");\n      if (+response.authorize.is_virtual === 1) {\n        $ele.is(\":visible\") && $ele.slideUp(500);\n        is_shown = false;\n        reposition_dialogs(115);\n        return;\n      }\n\n      const [account_status, website_status, get_settings,\n        financial_assessment, mt5_account] = await _this.getStatus(response.authorize);\n      _this.tc_accepted = false;\n      _this.financial_assessment_submitted = true;\n      _this.is_mlt = /^malta$/gi.test(response.authorize.landing_company_name);\n      _this.is_mf = /^maltainvest$/gi.test(response.authorize.landing_company_name);\n      _this.is_cr = /^costarica$/gi.test(response.authorize.landing_company_name);\n      _this.has_mt5_account = mt5_account.mt5_login_list.length > 0;\n      _this.is_authenticated = !account_status.get_account_status.prompt_client_to_authenticate;\n      // Check whether the user has accepted the T&C.\n      if (website_status && website_status.website_status && get_settings && get_settings.get_settings) {\n        _this.tc_accepted = website_status.website_status.terms_conditions_version === get_settings.get_settings.client_tnc_status;\n      }\n\n      // Check whether the high risk clients have submitted the financial_assessment form.\n      if (account_status.get_account_status.risk_classification === \"high\" || _this.is_mf) {\n        _this.financial_assessment_submitted = account_status.get_account_status.status.indexOf(\"financial_assessment_not_complete\") == -1;\n      }\n\n      _this.checkStatus(response.authorize, account_status.get_account_status.status);\n    };\n    liveapi.events.on(\"login\", onLogin);\n    // liveapi.events.on(\"switch_account\", onLogin);\n\n    // Hide msg bar on logout.\n     liveapi.events.on('reset_accountstatus', _ => {\n         const $ele = $(\"#msg-notification\");\n         $ele.is(\":visible\") && $ele.slideUp(500);\n         is_shown = false;\n     });\n  }\n\n  getStatus() {\n    // Getting account status, website status, account settings and financial assessment.\n    return Promise.all([\n      liveapi.send({ get_account_status: 1 }),\n      liveapi.send({ \"website_status\": 1 }),\n      liveapi.send({ \"get_settings\": 1 }),\n      liveapi.cached.send({ get_financial_assessment: 1 }),\n      liveapi.send({ mt5_login_list: 1 })\n    ]);\n  }\n\n  checkStatus(authorize, status) {\n    // Message container\n    const $ele = $(\"#msg-notification\"),\n      _this = this;\n    // Contains validations, messages, onclick callbacks.\n    // Maintaining the order of priority.\n    const model = {\n      tc: {\n        message: \"Please [_1]accept the updated Terms and Conditions[_2] to lift your withdrawal and trading limits.\"\n          .i18n().replace(\"[_1]\", \"<a href='#'>\").replace(\"[_2]\", \"</a>\"),\n        is_valid: _ => _this.tc_accepted,\n        callback: tc.init\n      },\n      risk: {\n        message: \"Please complete the [_1]financial assessment form[_2] to lift your withdrawal and trading limits.\"\n          .i18n().replace(\"[_1]\", \"<a href='#'>\").replace(\"[_2]\", \"</a>\"),\n        is_valid: _ => _this.financial_assessment_submitted,\n        callback: financialassessment.init\n      },\n      tax: {\n        message: \"Please [_1]complete your account profile[_2] to lift your withdrawal and trading limits.\"\n          .i18n().replace(\"[_1]\", \"<a href='#'>\").replace(\"[_2]\", \"</a>\"),\n        is_valid: _ => !_this.is_mf || /crs_tin_information/.test(status),\n        callback: taxInformation.init\n      },\n      currency: {\n        message: \"Please set the [_1]currency[_2] of your account\"\n          .i18n().replace(\"[_1]\", \"<a href='#'>\").replace(\"[_2]\", \"</a>\"),\n        is_valid: _ => local_storage.get(\"currency\"),\n        callback: currency.check_currency\n      },\n      authenticate: {\n        message: \"[_1]Authenticate your account[_2] now to take full advantage of all withdrawal options available.\".i18n()\n          .replace(\"[_1]\", \"<a href='#'>\").replace(\"[_2]\", \"</a>\"),\n        is_valid: _ => _this.is_authenticated,\n        callback: notice.init\n      },\n      unwelcome: {\n        message: \"Your account is restricted. Kindly [_1]contact customer support[_2] for assistance.\"\n          .i18n().replace(\"[_1]\", \"<a href='#'>\").replace(\"[_2]\", \"</a>\"),\n        is_valid: _ => !/(unwelcome|(cashier|withdrawal)_locked)/.test(status),\n        callback: () => {\n          const lang = local_storage.get(\"i18n\").value ? local_storage.get(\"i18n\").value : \"en\";\n          const win = window.open(\"http://www.binary.com/\" + lang + \"/contact.html\");\n          win.focus();\n        }\n      }\n    }\n\n    // Getting the invalid account status.\n    const invalid_obj = _.find(model, obj => !obj.is_valid());\n    if (invalid_obj) {\n      // Show message\n      $ele.html(invalid_obj.message);\n      // bind click event to open specific dialogs with instructions.\n      $ele.find(\"a\").on(\"click\", invalid_obj.callback);\n      $ele.slideDown(500);\n      reposition_dialogs(140);\n      is_shown = true;\n    } else {\n      $ele.is(\":visible\") && $ele.slideUp(500);\n      reposition_dialogs(115);\n      is_shown = false;\n    }\n  }\n}\n\nexport const init = new AccountStatus();\n\nexport default {\n  init,\n  is_shown: () => is_shown\n}\n"]}