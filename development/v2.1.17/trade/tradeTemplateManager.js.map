{"version":3,"sources":["../../../../src/trade/tradeTemplateManager.es6"],"names":["require","local_storage","get","set","TradeTemplateManager","root","dialog","_this","templates","forEach","tmpl","random","template_type","setRandom","state","init_state","append","html","i18n","view","bind","route","value","menu","array","save_as_value","rename_tmpl","rename_value","current","current_tmpl","get_template","findIndex","t","update","save_as","name","categories_value","contract_category_display","capitalize","categoriy_displays_selected","save_changes","inx","push","growl","notice","message","open_file_selector","event","find","click","upload","file","target","files","reader","FileReader","onload","e","contents","result","data","JSON","parse","substring","replace","hash","isDuplicate","error","map","includes","apply","readAsText","preventDefault","set_template","download","json","stringify","console","log","download_file_in_browser","remove","filter","rename","do_rename","new_name","hide_template_menu","confirm","action","currentTarget","text","confirm_prevMenu","confirm_text","confirm_yes","confirm_no","hashCode","s","split","reduce","a","b","charCodeAt","tmpl_copy","unbind","init"],"mappings":"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","file":"tradeTemplateManager.js","sourcesContent":["/**\n * Created by amin on July 31, 2016.\n */\nimport $ from 'jquery';\nimport chartWindow from 'charts/chartWindow';\nimport rv from 'common/rivetsExtra';\nimport _ from 'lodash';\n\nrequire(['text!trade/tradeTemplateManager.html']);\n\nif(!local_storage.get('trade-templates')) {\n  local_storage.set('trade-templates', []);\n}\n\nclass TradeTemplateManager {\n  constructor(root, dialog) {\n    const _this = this;\n    const templates = local_storage.get(\"trade-templates\");\n    templates.forEach(function(tmpl){\n      if(!tmpl.random || !tmpl.template_type){\n        tmpl = _this.setRandom(tmpl);\n      }\n    });\n    local_storage.set(\"trade-templates\", templates);\n    const state = this.init_state(root, dialog);\n    require(['text!trade/tradeTemplateManager.html'], html => {\n      root.append(html.i18n());\n      this.view = rv.bind(root[0], state);\n    });\n  }\n\n  init_state(root, dialog) {\n    const state = {\n      route: { value: 'menu' },\n      menu: {\n      },\n      templates: {\n        array: local_storage.get('trade-templates'),\n        save_as_value: '',\n        rename_tmpl: null,\n        rename_value: '',\n        current: null,\n      }\n    };\n    const {route, templates, menu} = state;\n\n    /* persist applied templates between page reloads */\n    const current_tmpl = this.setRandom(dialog.get_template());\n    templates.array = local_storage.get(\"templates\");\n    if(_.findIndex(templates.array, t => t.random === current_tmpl.random) !== -1) {\n      templates.current = current_tmpl;\n    }\n\n    route.update = value => {\n      route.value = value;\n    };\n\n    menu.save_as = () => {\n      const tmpl = dialog.get_template();\n      tmpl.name = `${tmpl.categories_value.contract_category_display} ${_.capitalize(tmpl.categoriy_displays_selected.name)}`;\n      templates.save_as_value = tmpl.name;\n      route.update('save-as');\n    }\n\n    menu.templates = () => {\n      templates.array = local_storage.get('trade-templates'); // it can be modified from other dialogs.\n      route.update('templates');\n    }\n\n    menu.save_changes = () => {\n      const current = this.setRandom(dialog.get_template());\n      const name = current.name;\n      const array = local_storage.get('trade-templates');\n      const inx = _.findIndex(array, t => t.name === name);\n      if(inx !== -1) {\n        array[inx] = current;\n      } else {\n        array.push(current);\n      }\n      local_storage.set('trade-templates', array);\n      templates.array = array;\n      templates.current = current;\n      $.growl.notice({message: 'Template changes saved '.i18n() + '(' + current.name + ')'});\n    }\n\n    menu.open_file_selector = (event) => {\n      $(root).find(\"input[type=file]\").click();\n    }\n\n    menu.upload = (event) => {\n      const _this = this;\n      const file = event.target.files[0];\n      event.target.value = null;\n      if(!file)\n        return;\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const contents = e.target.result;\n        const array = local_storage.get(\"trade-templates\");\n        let data = null;\n        try{\n          data = JSON.parse(contents);\n          data.name = data.name.substring(0,20).replace(/[<>]/g,\"-\");\n          const hash = data.random;\n          data = _this.setRandom(data);\n          if(hash !== data.random){\n            throw \"Invalid JSON file\".i18n();\n          }\n          if(_this.isDuplicate(data, array)){\n            return;\n          }\n          if(data.template_type !== 'trade-template') {\n            throw \"Invalid template type.\".i18n();\n          }\n        } catch(e){\n          $.growl.error({message:e});\n          return;\n        }\n\n        // Rename duplicate template names.\n        let file = 1,\n            name = data.name;\n        while(1){\n          if(array.map(t => t.name).includes(name)) {\n            name = data.name + \" (\" + file + \")\"\n            file++;\n            continue;\n          }\n          data.name = name;\n          break;\n        }\n\n        templates.apply(data);\n        array.push(data);\n        local_storage.set('trade-templates', array);\n        templates.array = array;\n        $.growl.notice({message: \"Successfully applied the template and saved it as \".i18n() + \"<b>\" + data.name + \"</b>\"});\n      }\n\n      reader.readAsText(file);\n    }\n\n    templates.save_as = (event) => {\n      event.preventDefault();\n      const name = templates.save_as_value.substring(0,20).replace(/[<>]/g,\"-\");\n      const tmpl = this.setRandom(dialog.get_template());\n      if(tmpl) {\n        tmpl.name = name;\n        const array = local_storage.get('trade-templates');\n        if(array.map(t => t.name).includes(name)) {\n          $.growl.error({message: 'Template name already exists'.i18n() });\n          return;\n        }\n\n        if(this.isDuplicate(tmpl, array)){\n          return;\n        }\n        array.push(tmpl);\n        templates.current = tmpl;\n        local_storage.set('trade-templates', array);\n        templates.array = array;\n        route.update('menu');\n        dialog.set_template(tmpl);\n      }\n    }\n\n    templates.download = (tmpl) => {\n      var json = JSON.stringify(tmpl);\n      console.log(tmpl);\n      download_file_in_browser(tmpl.name + '.json', 'text/json;charset=utf-8;', json);\n      $.growl.notice({message: \"Downloading template as <b>\".i18n() + tmpl.name + \".json</b>\"});\n    }\n\n    templates.remove = (tmpl) => {\n      let array = local_storage.get('trade-templates');\n      templates.array = array.filter(t => t.name !== tmpl.name);\n      local_storage.set('trade-templates', templates.array);\n      if(templates.current && tmpl.name === templates.current.name) {\n        templates.current = null;\n      }\n    }\n\n    templates.rename = tmpl => {\n      templates.rename_value = tmpl.name;\n      templates.rename_tmpl = tmpl;\n      route.update('rename');\n    }\n\n    templates.do_rename = (event) => {\n      event.preventDefault();\n      const name = templates.rename_tmpl.name;\n      const new_name = templates.rename_value.substring(0,20).replace(/[<>]/g,\"-\");\n      const array = local_storage.get('trade-templates');\n      if(array.map(t => t.name).includes(new_name)) {\n          $.growl.error({message: 'Template name already exists'.i18n() });\n          return;\n      };\n      const tmpl = array.find(t => t.name === name);\n      if(tmpl) {\n        tmpl.name = new_name;\n        local_storage.set('trade-templates', array);\n        templates.array = array;\n        route.update('templates');\n\n        /* update template name in current dialog */\n        const current = this.setRandom(dialog.get_template());\n        if(current.random == tmpl.random) {\n          current.name = new_name\n          dialog.set_template(current);\n          templates.current = current;\n        }\n      }\n    }\n\n    templates.apply = tmpl => {\n      dialog.set_template(tmpl);\n      templates.current = tmpl;\n      route.update('menu');\n      dialog.hide_template_menu();\n    }\n\n    templates.confirm = (tmpl, event) => {\n      route.update(\"confirm\");\n      const action = event.currentTarget.text;\n      templates.confirm_prevMenu = action === \"Delete\".i18n() ? \"templates\" : \"menu\";\n      templates.confirm_text = action === \"Delete\".i18n() ? \"Are you sure you want to delete template?\".i18n() : \"Are you sure you want to overwrite current template?\".i18n();\n\n      templates.confirm_yes = () => {\n        if(action === \"Delete\".i18n()) {\n          templates.remove(tmpl)\n          if(templates.current === tmpl)\n            templates.current = null;\n        }\n        else {\n          menu.save_changes();\n        }\n        templates.confirm_no();\n      }\n\n      templates.confirm_no = () => {\n        route.update(templates.confirm_prevMenu);\n      }\n    }\n\n    return state;\n  }\n\n  setRandom(tmpl) {\n    const name = tmpl.name;\n    delete tmpl.name;\n    delete tmpl.random;\n    tmpl.template_type = 'trade-template';\n    tmpl.random = this.hashCode(JSON.stringify(tmpl));\n    tmpl.name = name;\n    return tmpl;\n  }\n\n  hashCode(s) {\n    return s.split(\"\").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);\n  }\n\n  isDuplicate(tmpl, array){\n    // get template with same values.\n    const tmpl_copy = _.find(array, ['random', tmpl.random]);\n    if(tmpl_copy){\n      $.growl.error({message: 'Template already saved as '.i18n() +'<b>' + tmpl_copy.name + '</b>.'});\n      return true;\n    }\n    return false;\n  }\n\n  unbind() {\n    this.view && this.view.unbind();\n    this.view = null;\n  }\n}\n\nexport const init = (root, dialog) => new TradeTemplateManager(root, dialog);\nexport default { init, };\n"]}