{"version":3,"sources":["../../../../src/portfolio/portfolio.es6"],"names":["portfolioWin","table","balance_span","currency","subscribed_contracts","init","li","click","initPortfolioWin","moveToTop","update_indicative","data","error","contract","proposal_open_contract","id","contract_id","bid_price","row","api","cols","perv_indicative","tr","find","is_valid_to_sell","removeClass","addClass","subscribed_before","subscribers","events","on","proposalOpenContract","command","send","subscribe","then","catch","err","console","growl","message","forget_all","on_arrow_click","e","target","$target","tagName","hasClass","parentElement","transaction","_","last","require","viewTransaction","transaction_id","on_balance","balance","undefined","update","lng","local_storage","get","value","active_symbols","on_transaction","action","view_button","i18n","longcode","Math","abs","amount","date_expiry","sell_expired","rows","add","draw","subscribe_to_contracts","remove","forget_the_contracts","createBlankWindow","title","dialogClass","width","height","close","off","open","init_table","destroy","DataTable","refresh","header","parent","insertAfter","html","formatPrice","appendTo","dataTable","columns","render","val","rowId","paging","ordering","processing","track","module_id","is_unique","dialog","contracts","forEach","push","promises","map","forget","ids","filter","includes","Promise","all","processing_msg","attr","show","portfolio","buy_price","expiry_time","hide","resubscribe"],"mappings":"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","file":"portfolio.js","sourcesContent":["﻿/**\n * Created by amin on 10/9/15.\n */\n\nimport $ from 'jquery';\nimport windows from '../windows/windows';\nimport liveapi from '../websockets/binary_websockets';\nimport 'jquery-ui';\nimport 'datatables';\nimport 'jquery-growl';\nimport 'css!./portfolio.css';\n\nlet portfolioWin = null;\nlet table = null;\nlet balance_span = null;\nlet currency = 'USD';\nlet subscribed_contracts = [];\n\nexport const init = (li) => {\n    li.click(() => {\n        if(!portfolioWin)\n            initPortfolioWin();\n        else\n            portfolioWin.moveToTop();\n    });\n}\n\nconst update_indicative = (data) => {\n    if(data.error)\n        return;\n\n    const contract = data.proposal_open_contract;\n    const id = contract.contract_id,\n        bid_price = contract.bid_price;\n\n    if (table) {\n        const row = table.api().row('#' + id);\n        const cols = row.data();\n        if(!cols)\n            return; /* table might be empty */\n        const perv_indicative = cols[3];\n        cols[3] = bid_price; /* update the indicative column */\n        row.data(cols);\n\n        /* colorize indicative column on change */\n        const tr = table.find('#' + id);\n        if(!contract.is_valid_to_sell) {\n            tr.removeClass('indicative-red indicative-green').addClass('resale-not-offered');\n        } else {\n            tr.removeClass('resale-not-offered');\n            if(perv_indicative !== bid_price) {\n            tr.removeClass('indicative-red indicative-green')\n                .addClass((perv_indicative*1 < bid_price*1) ? 'indicative-green' : 'indicative-red');\n            }\n        }\n    }\n}\n\nlet subscribed_before = false;\nlet subscribers = 0;\nliveapi.events.on('logout',() => {\n    subscribed_before = false;\n    subscribers = 0;\n});\n\n/* command could be 'subscribe','forget' and 'resubscribe'. */\nconst proposalOpenContract = (command) => {\n    if(command === 'subscribe') {\n        ++subscribers;\n        if(!subscribed_before && subscribers > 0) {\n            liveapi.send({ proposal_open_contract: 1,subscribe: 1 })\n                .then((data) => { subscribed_before = true; })\n                .catch((err) => {\n                    console.error(err);\n                    $.growl.error({ message: err.message });\n                });\n        }\n    }\n    else if(command === 'forget') {\n        --subscribers;\n        if(subscribed_before && subscribers === 0) {\n            liveapi.send({ forget_all: 'proposal_open_contract' })\n                .then((data) => {\n                    subscribed_before = false;\n                })\n                .catch((err) => {\n                    subscribed_before = false;\n                    console.error(err.message);\n                });\n        }\n    }\n    else if( command === 'resubscribe' ) {\n        liveapi.send({ forget_all: 'proposal_open_contract' })\n            .then((data) => {\n                subscribed_before = false;\n                --subscribers;\n                proposalOpenContract('subscribe'); /* subscribe again */\n            })\n            .catch((err) => {\n                subscribed_before = false;\n                console.error(err.message);\n            });\n    }\n    else {\n        console.error('wrong command!');\n        return;\n    }\n}\n\nconst on_arrow_click =(e) => {\n    const target = e.target;\n    const $target = $(target);\n    if(target.tagName !== 'BUTTON' || $target.hasClass('button-disabled'))\n    return;\n    const tr = target.parentElement.parentElement;\n    let transaction = table.api().row(tr).data();\n    transaction = _.last(transaction);\n    $target.addClass('button-disabled');\n    require(['viewtransaction/viewTransaction'],(viewTransaction) => {\n    viewTransaction.init(transaction.contract_id, transaction.transaction_id)\n                    .then(() => $target.removeClass('button-disabled')).catch((err)=>{\n                        $target.removeClass('button-disabled');\n                    });\n    });\n}\n\nconst initPortfolioWin = () => {\n    /* refresh blance on blance change */\n    const on_balance = liveapi.events.on('balance',(data) => {\n        if(data.balance !== undefined && data.balance.currency !== undefined) {\n           currency = data.balance.currency;\n           balance_span && balance_span && balance_span.update(data.balance.balance);\n        }\n    });\n    const lng = (local_storage.get('i18n') || {value:'en'}).value;\n    const active_symbols = local_storage.get('active_symbols'); \n    /* refresh portfolio when a new contract is added or closed */\n    const on_transaction = liveapi.events.on('transaction',(data) => {\n        const transaction = data.transaction;\n        if(transaction.action === 'buy') {\n            const view_button = '<button>View</button>'.i18n();\n            const row = [\n                transaction.transaction_id,\n                transaction.longcode,\n                Math.abs(transaction.amount),\n                '0.00',\n                view_button,\n                transaction.contract_id, /* for jq-datatables rowId */\n                transaction, /* data for view transaction dailog - when clicking on arrows */\n            ];\n            transaction.date_expiry && liveapi.sell_expired(transaction.date_expiry)\n            table.api().rows.add([row]);\n            table.api().draw();\n            subscribe_to_contracts([transaction]);\n        } else if (transaction.action === 'sell') {\n            const tr = table.find('#' + transaction.contract_id)[0];\n            table.api().row(tr).remove();\n            table.api().draw();\n            forget_the_contracts([transaction]);\n        }\n    });\n\n    liveapi.send({ balance: 1 })\n        .then((data) => {\n            portfolioWin = windows.createBlankWindow($('<div/>'), {\n                title: 'Portfolio'.i18n(),\n                dialogClass: 'portfolio',\n                width: 700 ,\n                height: 400,\n                'data-authorized': 'true',\n                close: () => {\n                    forget_the_contracts(subscribed_contracts);\n                    /* un-register proposal_open_contract handler */\n                    liveapi.events.off('proposal_open_contract', update_indicative);\n                },\n                open: () => {\n                    init_table();\n                    /* register handler for proposal_open_contract */\n                    liveapi.events.on('proposal_open_contract', update_indicative);\n                },\n                destroy: () => {\n                    table && table.DataTable().destroy(true);\n                    portfolioWin = null;\n                    liveapi.events.off('balance', on_balance);\n                    liveapi.events.off('transaction', on_transaction);\n                },\n                refresh: () => {\n                    liveapi.send({ balance: 1 }).catch((err) => { console.error(err); $.growl.error({ message: err.message }); });\n                    forget_the_contracts(subscribed_contracts).then(init_table);\n                }\n            });\n\n            const header = portfolioWin.parent().find('.ui-dialog-title').addClass('with-content');\n            balance_span = $('<span class=\"span-in-dialog-header\" />')\n                .insertAfter(header);\n            balance_span.update = (balance) => {\n                balance_span.html('Account balance: <strong>'.i18n() +  formatPrice(balance, currency) + '</strong>');\n            };\n\n            const currency = data.balance.currency;\n            table = $(\"<table width='100%' class='portfolio-dialog hover'/>\");\n            table.appendTo(portfolioWin);\n            table = table.dataTable({\n                data: [],\n                columns: [\n                    { title: 'Ref.'.i18n() },\n                    { title: 'Contract Details'.i18n() },\n                    {\n                        title: 'Purchase'.i18n(),\n                        render: (val) => ('<span class=\"bold\">' + formatPrice(val,currency) + '</span>')\n                    },\n                    {\n                        title: 'Indicative'.i18n(),\n                        render: (val) => ('<span class=\"bold\">' + formatPrice(val,currency) + '</span>')\n                    },\n                    { title: '' }\n                ],\n                rowId : '5', /* jQ datatables support selecting rows based on rowId https://datatables.net/reference/type/row-selector\n                                we want not to query rows everytime we update the indicative column */\n                paging: false,\n                ordering: false,\n                processing: true\n            });\n            table.parent().addClass('hide-search-input');\n\n            portfolioWin.on('click', on_arrow_click);\n            portfolioWin.track({\n                module_id: 'portfolio',\n                is_unique: true,\n                data: null\n            });\n            portfolioWin.dialog('open');\n        })\n        .catch(\n           (err) => console.error(err)\n        );\n}\n\nconst subscribe_to_contracts = (contracts) => {\n    contracts.forEach((contract) => {\n        subscribed_contracts.push(contract);\n        liveapi.proposal_open_contract\n            .subscribe(contract.contract_id)\n            .catch(\n               (err) => console.error({ message: err.message })\n            );\n    });\n}\n\nconst forget_the_contracts = (contracts) => {\n    const promises = contracts.map((contract) => {\n        return liveapi.proposal_open_contract\n                .forget(contract.contract_id)\n                .catch(\n                   (err) => $.growl.error({ message: err.message })\n                );\n    });\n    const ids = _.map(contracts, 'contract_id');\n    subscribed_contracts = subscribed_contracts.filter(\n      (contract) => (_.includes(ids, contract.contract_id) === false)\n    );\n    return Promise.all(promises);\n}\n\nconst init_table = async () => {\n    const processing_msg = $('#' + table.attr('id') + '_processing').show();   \n    try {\n        const data = await liveapi.send({ portfolio: 1 });\n        const contracts = (data.portfolio && data.portfolio.contracts);\n            //|| [\n            //    {\n            //        symbol: '', shortcode: '', contract_id: '', longcode: '', expiry_time: 0, currency: '',\n            //        date_start: 0, purchase_time: 0, buy_price: '', contract_type: '', payout: ''\n            //    }\n            //];\n\n        const view_button = '<button>View</button>'.i18n();\n        const rows = contracts.map((contract) => {\n            return [\n                contract.transaction_id,\n                contract.longcode,\n                contract.buy_price,\n                '0.00',\n                view_button,\n                contract.contract_id, /* for jq-datatables rowId */\n                contract, /* data for view transaction dailog - when clicking on arrows */\n            ];\n        });\n        /* register callback to sell contract on expiration */\n        contracts.forEach(contract => liveapi.sell_expired(contract.expiry_time));\n        subscribe_to_contracts(contracts);\n\n        /* update the table */\n        table.api().rows().remove();\n        table.api().rows.add(rows);\n        table.api().draw();\n        processing_msg.hide();\n    }\n    catch(err) {\n        console.error(err);\n        table.api().rows().remove();\n        table.api().draw();\n        processing_msg.hide();\n        $.growl.error({ message: err.message });\n    }\n}\n\nexport const proposal_open_contract = {\n    subscribe: () => proposalOpenContract('subscribe'),\n    forget: () => proposalOpenContract('forget'),\n    resubscribe: () => proposalOpenContract('resubscribe')\n};\n\nexport default { init, proposal_open_contract }; \n"]}